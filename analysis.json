{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`export-options`\n\nExport options dialog for ARC.\n\nListen for (non-bubbling) `accept` or `cancel` custom events.\n\nThe detail on the `accept` event has the following values:\n\n```json\n{\n \"options\": {\n   \"file\": \"my-demo-file.json\",\n   \"provider\": \"drive\",\n   \"skipImport\": true\n }\n}\n```\n\nAdditionally it can contain provider specific options:\n\n```json\n{\n \"providerOptions\": {\n   \"parents\": [\n     {\n       \"name\": \"Existing folder\",\n       \"id\": \"folder2\"\n     },\n     {\n       \"name\": \"Create folder\",\n     }\n  ]\n}\n```\n\n## Styling\n\n`<export-options>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--primary-color` | Theme property, button color or action button background color | ``\n`--primary-action-color` | Theme property, action button color | `#fff`",
      "summary": "",
      "path": "export-options.js",
      "properties": [
        {
          "name": "file",
          "type": "string | null | undefined",
          "description": "Export file name.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 40
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "provider",
          "type": "string | null | undefined",
          "description": "Export provider. By default it is `drive` or `file`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 44
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "providerOptions",
          "type": "Object | null | undefined",
          "description": "Google Drive export options. Only relevant when `file` is set to\n`drive`.\n\nThe object contains `parents` property which is an array of provided\nby the user names of folder to create or IDs of already created\nfolders.\n\nThe `accept` event will contain processed lsit of parents where\neach item is an object with `name` and optional `id` property.\nIf the `id` property is not set then new folder to be created when\nuploading the item to Google Drive.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "skipImport",
          "type": "boolean | null | undefined",
          "description": "Tells the application to set configuration on the export file to\nskip import and insert project directly into workspace.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isDrive",
          "type": "boolean | null | undefined",
          "description": "Computed value, true when current provider is Google Drive.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 112
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_isDriveChanged\"",
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "driveFolders",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 67
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_driveFoldersChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_driveSuggestions",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 209,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIsDrive",
          "description": "Computes value for `isDrive` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 217,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "String",
              "description": "Current desination selection."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when file equals `drive`."
          }
        },
        {
          "name": "confirm",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "cancel",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 2
            },
            "end": {
              "line": 231,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_validateProvider",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getDriveFolders",
          "description": "Computes return valye for Gogole Drive folder.\nIt creates a list of objects with `name` and optional `id` property\nwhich indicates whether the folder has to be created or not.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array.<Object>",
            "desc": "Parent folders definition."
          }
        },
        {
          "name": "_findFolder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "folders"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_isDriveChanged",
          "description": "Called automatically when `isDrive` property change.\nDispatches `iron-resize` custom event so parent elements can position this element\nin e.g dialogs.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 2
            },
            "end": {
              "line": 300,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Boolean",
              "description": "Cusrrent isDrive value."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_listDriveFolders",
          "description": "Attempts to read application settings by dispatching `settings-read`\nwith type `google-drive`. It expects to return `appFolders` with a list\nof folder created by the app. This value is set as a suggestions on\nfolder input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 2
            },
            "end": {
              "line": 324,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "This function is called automatically, this returns is\nfor tests."
          }
        },
        {
          "name": "_dispatchReadDriveSettings",
          "description": "Dispatches `settings-read` custom event with type `google-drive`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "CustomEvent",
            "desc": "e"
          }
        },
        {
          "name": "_driveFoldersChanged",
          "description": "Transforms meta data related to created by the application Google Drive\nfolders to a list of suggestions.\n\nGoogle Drive folders meta are stores in the following structure:\n\n```json\n{\n  \"id\": \"Drive id\",\n  \"name\": \"Folder name\"\n}\n```\n\nThis produces suggestions for paper-chip-input in form:\n```json\n{\n  \"value\": \"Folder name\",\n  \"id\": \"Drive id\"\n}\n```",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "folders",
              "type": "?Array.<Object>",
              "description": "List of folder."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_stopEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 2
            },
            "end": {
              "line": 382,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 63,
          "column": 0
        },
        "end": {
          "line": 383,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "ApiElements.ExportOptions",
      "attributes": [
        {
          "name": "file",
          "description": "Export file name.",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 40
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "provider",
          "description": "Export provider. By default it is `drive` or `file`.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 44
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "provider-options",
          "description": "Google Drive export options. Only relevant when `file` is set to\n`drive`.\n\nThe object contains `parents` property which is an array of provided\nby the user names of folder to create or IDs of already created\nfolders.\n\nThe `accept` event will contain processed lsit of parents where\neach item is an object with `name` and optional `id` property.\nIf the `id` property is not set then new folder to be created when\nuploading the item to Google Drive.",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "skip-import",
          "description": "Tells the application to set configuration on the export file to\nskip import and insert project directly into workspace.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-drive",
          "description": "Computed value, true when current provider is Google Drive.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 112
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drive-folders",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 67
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "file-changed",
          "description": "Fired when the `file` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "provider-changed",
          "description": "Fired when the `provider` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "provider-options-changed",
          "description": "Fired when the `providerOptions` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "export-options"
    }
  ]
}
